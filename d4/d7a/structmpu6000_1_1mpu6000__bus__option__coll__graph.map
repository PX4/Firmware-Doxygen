<map id="mpu6000::mpu6000_bus_option" name="mpu6000::mpu6000_bus_option">
<area shape="rect" id="node2" href="$dd/dd3/classdevice_1_1_device.html" title="Fundamental base class for all physical drivers (I2C, SPI). " alt="" coords="444,329,578,597"/>
<area shape="rect" id="node6" href="$db/dcf/classdevice_1_1_c_dev.html" title="Abstract class for any character device. " alt="" coords="1029,660,1212,1075"/>
<area shape="rect" id="node3" href="$df/d98/uniondevice_1_1_device_1_1_device_id.html" title="{device::Device::DeviceId\n|+ devid\l|}" alt="" coords="426,189,596,267"/>
<area shape="rect" id="node4" href="$d6/d48/structdevice_1_1_device_1_1_device_structure.html" title="{device::Device::DeviceStructure\n|+ bus_type\l+ bus\l+ address\l+ devtype\l|}" alt="" coords="406,5,616,127"/>
<area shape="rect" id="node5" href="$d5/d19/class_m_p_u6000.html" title="{MPU6000\n|# _interface\l&#45; _device_type\l&#45; _product\l&#45; _use_hrt\l&#45; _call_interval\l&#45; _accel_reports\l&#45; _accel_range_scale\land 17 more...\l&#45; _checked_registers\l|+ MPU6000()\l+ ~MPU6000()\l+ init()\l+ read()\l+ ioctl()\l+ print_info()\l+ print_registers()\l+ factory_self_test()\l+ test_error()\l# probe()\l# gyro_read()\l# gyro_ioctl()\l&#45; start()\l&#45; stop()\l&#45; reset()\l&#45; is_icm_device()\l&#45; is_mpu_device()\l&#45; is_i2c()\land 16 more...\l&#45; measure_trampoline()\l}" alt="" coords="584,1211,739,1684"/>
<area shape="rect" id="node8" href="$d7/d54/class_m_p_u6000__gyro.html" title="Helper class implementing the gyro driver node. " alt="" coords="654,1747,835,1956"/>
<area shape="rect" id="node7" href="$dc/d06/structdevice_1_1file__operations.html" title="{device::file_operations\n|+ op\l|}" alt="" coords="1044,425,1196,502"/>
<area shape="rect" id="node9" href="$de/dfc/classmath_1_1_low_pass_filter2p.html" title="{math::LowPassFilter2p\n|&#45; _cutoff_freq\l&#45; _a1\l&#45; _a2\l&#45; _b0\l&#45; _b1\l&#45; _b2\l&#45; _delay_element_1\l&#45; _delay_element_2\l|+ LowPassFilter2p()\l+ set_cutoff_frequency()\l+ apply()\l+ get_cutoff_freq()\l+ reset()\l}" alt="" coords="108,748,272,987"/>
<area shape="rect" id="node10" href="$d2/d1c/structgyro__calibration__s.html" title="gyro scaling factors; Vout = (Vin * Vscale) + Voffset " alt="" coords="296,792,422,943"/>
<area shape="rect" id="node11" href="$d2/db8/structperf__ctr__header.html" title="Header common to all counters. " alt="" coords="447,814,559,921"/>
<area shape="rect" id="node12" href="$d6/d55/class_integrator.html" title="{Integrator\n|&#45; _auto_reset_interval\l&#45; _last_integration_time\l&#45; _last_reset_time\l&#45; _alpha\l&#45; _last_alpha\l&#45; _beta\l&#45; _last_val\l&#45; _last_delta_alpha\l&#45; _coning_comp_on\l|+ Integrator()\l+ ~Integrator()\l+ Integrator()\l+ operator=()\l+ Integrator()\l+ operator=()\land 5 more...\l&#45; _reset()\l}" alt="" coords="583,719,740,1016"/>
<area shape="rect" id="node13" href="$dc/d0d/structhrt__call.html" title="Callout record. " alt="" coords="764,799,847,935"/>
<area shape="rect" id="node14" href="$de/d34/structaccel__calibration__s.html" title="accel scaling factors; Vout = Vscale * (Vin + Voffset) " alt="" coords="871,792,1004,943"/>
</map>
